{"ast":null,"code":"export default function Validate(userData, errors, setErrors) {\n  const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n  if (!userData.email) setErrors({\n    ...errors,\n    email: 'Email is required'\n  });else if (!regexEmail.test(userData.email)) setErrors({\n    ...errors,\n    email: 'Email is invalid'\n  });else if (userData.email.length > 35) setErrors({\n    ...errors,\n    email: 'Email is too long'\n  });else setErrors({\n    ...errors,\n    email: ''\n  });\n  const passwordRegex = /^(?=.*[0-9])/;\n  /^(?=.*[0-9])/;\n  if (!userData.password) setErrors({\n    ...errors,\n    password: 'Password is required'\n  });else if (passwordRegex.test(userData.password)) setErrors({\n    ...errors,\n    password: 'Password require at least one number'\n  });else if (userData.password.length < 6 || userData.password.lenght > 10) setErrors({\n    ...errors,\n    password: 'Password should be at least 6 characters long and less than 10 characters long'\n  });else setErrors({\n    ...errors,\n    password: ''\n  });\n}\n_c = Validate;\nvar _c;\n$RefreshReg$(_c, \"Validate\");","map":{"version":3,"names":["Validate","userData","errors","setErrors","regexEmail","email","test","length","passwordRegex","password","lenght","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/RICK-MORTY/Integrador-RickandMorty/CLIENT/src/components/Form/Validations.js"],"sourcesContent":["export default function Validate (userData, errors, setErrors) {\n\n    const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\n    if (!userData.email) setErrors({...errors, email: 'Email is required'})\n    else if (!regexEmail.test(userData.email)) setErrors({...errors, email: 'Email is invalid'})\n    else if(userData.email.length > 35) setErrors({...errors, email: 'Email is too long'})\n    else setErrors({...errors, email: ''});\n\n    const passwordRegex = /^(?=.*[0-9])/; /^(?=.*[0-9])/\n\n    if (!userData.password) setErrors({...errors, password: 'Password is required'})\n    else if (passwordRegex.test(userData.password)) \n    setErrors({...errors, password: 'Password require at least one number'})\n    else if (userData.password.length < 6 || userData.password.lenght > 10) \n    setErrors({...errors, password: 'Password should be at least 6 characters long and less than 10 characters long'});\n    else setErrors({...errors, password: ''});\n}"],"mappings":"AAAA,eAAe,SAASA,QAAQA,CAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAE;EAE3D,MAAMC,UAAU,GAAG,2CAA2C;EAE9D,IAAI,CAACH,QAAQ,CAACI,KAAK,EAAEF,SAAS,CAAC;IAAC,GAAGD,MAAM;IAAEG,KAAK,EAAE;EAAmB,CAAC,CAAC,MAClE,IAAI,CAACD,UAAU,CAACE,IAAI,CAACL,QAAQ,CAACI,KAAK,CAAC,EAAEF,SAAS,CAAC;IAAC,GAAGD,MAAM;IAAEG,KAAK,EAAE;EAAkB,CAAC,CAAC,MACvF,IAAGJ,QAAQ,CAACI,KAAK,CAACE,MAAM,GAAG,EAAE,EAAEJ,SAAS,CAAC;IAAC,GAAGD,MAAM;IAAEG,KAAK,EAAE;EAAmB,CAAC,CAAC,MACjFF,SAAS,CAAC;IAAC,GAAGD,MAAM;IAAEG,KAAK,EAAE;EAAE,CAAC,CAAC;EAEtC,MAAMG,aAAa,GAAG,cAAc;EAAE,cAAc;EAEpD,IAAI,CAACP,QAAQ,CAACQ,QAAQ,EAAEN,SAAS,CAAC;IAAC,GAAGD,MAAM;IAAEO,QAAQ,EAAE;EAAsB,CAAC,CAAC,MAC3E,IAAID,aAAa,CAACF,IAAI,CAACL,QAAQ,CAACQ,QAAQ,CAAC,EAC9CN,SAAS,CAAC;IAAC,GAAGD,MAAM;IAAEO,QAAQ,EAAE;EAAsC,CAAC,CAAC,MACnE,IAAIR,QAAQ,CAACQ,QAAQ,CAACF,MAAM,GAAG,CAAC,IAAIN,QAAQ,CAACQ,QAAQ,CAACC,MAAM,GAAG,EAAE,EACtEP,SAAS,CAAC;IAAC,GAAGD,MAAM;IAAEO,QAAQ,EAAE;EAAgF,CAAC,CAAC,CAAC,KAC9GN,SAAS,CAAC;IAAC,GAAGD,MAAM;IAAEO,QAAQ,EAAE;EAAE,CAAC,CAAC;AAC7C;AAACE,EAAA,GAjBuBX,QAAQ;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}